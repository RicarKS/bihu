<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xt.bihu.mapper.AnswerMapper" >
  <resultMap id="BaseResultMap" type="com.xt.bihu.entity.Answer" >
    <id column="answer_id" property="answerId" jdbcType="BIGINT" />
    <result column="answer_liked_count" property="answerLikedCount" jdbcType="INTEGER" />
    <result column="answer_comment_count" property="answerCommentCount" jdbcType="INTEGER" />
    <result column="answer_create_time" property="answerCreateTime" jdbcType="TIMESTAMP" />
    <result column="answer_update_time" property="answerUpdateTime" jdbcType="TIMESTAMP" />
    <result column="question_id" property="questionId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xt.bihu.entity.Answer" extends="BaseResultMap" >
    <result column="answer_content" property="answerContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    answer_id, answer_liked_count, answer_comment_count, answer_create_time, answer_update_time, 
    question_id, user_id
  </sql>
  <sql id="Blob_Column_List" >
    answer_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xt.bihu.entity.AnswerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xt.bihu.entity.AnswerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from answer
    where answer_id = #{answerId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from answer
    where answer_id = #{answerId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xt.bihu.entity.AnswerExample" >
    delete from answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xt.bihu.entity.Answer" useGeneratedKeys="true" keyProperty="answerId">
    insert into answer (answer_id, answer_liked_count, answer_comment_count, 
      answer_create_time, answer_update_time, 
      question_id, user_id, answer_content
      )
    values (#{answerId,jdbcType=BIGINT}, #{answerLikedCount,jdbcType=INTEGER}, #{answerCommentCount,jdbcType=INTEGER}, 
      #{answerCreateTime,jdbcType=TIMESTAMP}, #{answerUpdateTime,jdbcType=TIMESTAMP}, 
      #{questionId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{answerContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xt.bihu.entity.Answer" useGeneratedKeys="true" keyProperty="answerId">
    insert into answer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="answerId != null" >
        answer_id,
      </if>
      <if test="answerLikedCount != null" >
        answer_liked_count,
      </if>
      <if test="answerCommentCount != null" >
        answer_comment_count,
      </if>
      <if test="answerCreateTime != null" >
        answer_create_time,
      </if>
      <if test="answerUpdateTime != null" >
        answer_update_time,
      </if>
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="answerContent != null" >
        answer_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="answerId != null" >
        #{answerId,jdbcType=BIGINT},
      </if>
      <if test="answerLikedCount != null" >
        #{answerLikedCount,jdbcType=INTEGER},
      </if>
      <if test="answerCommentCount != null" >
        #{answerCommentCount,jdbcType=INTEGER},
      </if>
      <if test="answerCreateTime != null" >
        #{answerCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="answerUpdateTime != null" >
        #{answerUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="answerContent != null" >
        #{answerContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xt.bihu.entity.AnswerExample" resultType="java.lang.Integer" >
    select count(*) from answer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update answer
    <set >
      <if test="record.answerId != null" >
        answer_id = #{record.answerId,jdbcType=BIGINT},
      </if>
      <if test="record.answerLikedCount != null" >
        answer_liked_count = #{record.answerLikedCount,jdbcType=INTEGER},
      </if>
      <if test="record.answerCommentCount != null" >
        answer_comment_count = #{record.answerCommentCount,jdbcType=INTEGER},
      </if>
      <if test="record.answerCreateTime != null" >
        answer_create_time = #{record.answerCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.answerUpdateTime != null" >
        answer_update_time = #{record.answerUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.questionId != null" >
        question_id = #{record.questionId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.answerContent != null" >
        answer_content = #{record.answerContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update answer
    set answer_id = #{record.answerId,jdbcType=BIGINT},
      answer_liked_count = #{record.answerLikedCount,jdbcType=INTEGER},
      answer_comment_count = #{record.answerCommentCount,jdbcType=INTEGER},
      answer_create_time = #{record.answerCreateTime,jdbcType=TIMESTAMP},
      answer_update_time = #{record.answerUpdateTime,jdbcType=TIMESTAMP},
      question_id = #{record.questionId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      answer_content = #{record.answerContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update answer
    set answer_id = #{record.answerId,jdbcType=BIGINT},
      answer_liked_count = #{record.answerLikedCount,jdbcType=INTEGER},
      answer_comment_count = #{record.answerCommentCount,jdbcType=INTEGER},
      answer_create_time = #{record.answerCreateTime,jdbcType=TIMESTAMP},
      answer_update_time = #{record.answerUpdateTime,jdbcType=TIMESTAMP},
      question_id = #{record.questionId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xt.bihu.entity.Answer" >
    update answer
    <set >
      <if test="answerLikedCount != null" >
        answer_liked_count = #{answerLikedCount,jdbcType=INTEGER},
      </if>
      <if test="answerCommentCount != null" >
        answer_comment_count = #{answerCommentCount,jdbcType=INTEGER},
      </if>
      <if test="answerCreateTime != null" >
        answer_create_time = #{answerCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="answerUpdateTime != null" >
        answer_update_time = #{answerUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="questionId != null" >
        question_id = #{questionId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="answerContent != null" >
        answer_content = #{answerContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where answer_id = #{answerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xt.bihu.entity.Answer" >
    update answer
    set answer_liked_count = #{answerLikedCount,jdbcType=INTEGER},
      answer_comment_count = #{answerCommentCount,jdbcType=INTEGER},
      answer_create_time = #{answerCreateTime,jdbcType=TIMESTAMP},
      answer_update_time = #{answerUpdateTime,jdbcType=TIMESTAMP},
      question_id = #{questionId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      answer_content = #{answerContent,jdbcType=LONGVARCHAR}
    where answer_id = #{answerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xt.bihu.entity.Answer" >
    update answer
    set answer_liked_count = #{answerLikedCount,jdbcType=INTEGER},
      answer_comment_count = #{answerCommentCount,jdbcType=INTEGER},
      answer_create_time = #{answerCreateTime,jdbcType=TIMESTAMP},
      answer_update_time = #{answerUpdateTime,jdbcType=TIMESTAMP},
      question_id = #{questionId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT}
    where answer_id = #{answerId,jdbcType=BIGINT}
  </update>
</mapper>